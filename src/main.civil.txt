# addStyle helper
.. style @ -- document createElement ! >> styleTag
.. $styleTag @ -- document head appendChild !
.. $styles >> styleTag textContent
<< styles >> addStyle

# load global styles
./src/globalStyle.civil.txt @ load !

# load all components
$Object ! >> components
.. './src/components/$name .civil.txt' @ -- load !
.. >> -- components $name
<< name : button database debounce dialog \
 documentCreateDialog documentDownload \
 documentManageDialog documentManageDelete \
 documentToolbar documentView documentsList documentsStore \
 editor editorSimple input menu spacer toolbar !
# Components , $components @ console log !

# create main toolbar
$components toolbar ! >> mainToolbar
div @ document createElement ! >> currentPathButtons
current-path @ currentPathButtons classList add ! 
$currentPathButtons @ mainToolbar container appendChild !
$components spacer ! @ mainToolbar container appendChild !

# toggle editor
button @ document createElement ! >> toggleEditorButton
toggle-editor @ toggleEditorButton classList add !
'ðŸ–‰ Editor' >> toggleEditorButton textContent
.. editor-enabled @ -- document body classList contains ! >> editorEnabled
.. .. editor-enabled @ -- -- document body classList remove !
.. .. editor-enabled @ -- -- localStorage removeItem !
.. $editorEnabled ?
.. .. editor-enabled @ -- -- document body classList add !
.. .. editor-enabled , true @ -- -- localStorage setItem !
.. $editorEnabled ~ ?
<< >> toggleEditor
click , $toggleEditor @ toggleEditorButton addEventListener !
$toggleEditorButton @ mainToolbar container appendChild !
.. editor-enabled @ -- document body classList add !
editor-enabled @ localStorage getItem ! ?

# toggle full screen
button @ document createElement ! >> fullScreenButton
â›¶ >> fullScreenButton textContent
.. $-- document fullscreen >> isFullScreen
.. .. $-- -- document exitFullscreen !
.. $isFullScreen ?
.. .. $-- -- document body requestFullscreen !
.. $isFullScreen ~ ?
<< >> toggleFullScreen
click , $toggleFullScreen @ fullScreenButton addEventListener !
$fullScreenButton @ mainToolbar container appendChild !
$mainToolbar container @ document body appendChild !

# create document area
div @ document createElement ! >> documentArea
document-area @ documentArea classList add !
$documentArea @ document body appendChild !

# connect to documents store
Civil @ components database ! >> civilDatabase
# civilDatabase , $civilDatabase @ console log !
$civilDatabase @ components documentsStore ! >> Documents
# Documents , $Documents @ console log !

# function to save a document
.. $-- Object ! >> documentObject
.. $id >> documentObject id
.. / @ id lastIndexOf ! >> nameDirSplit
.. $nameDirSplit +1 >> nameDirSplit
.. $nameDirSplit @ id substring ! >> documentObject name
.. 0 , $nameDirSplit @ id substring ! >> documentObject dir
.. $value >> documentObject value
.. $documentObject id @ -- Documents get ! >> existingDocument
.. .. .. $-- -- existingDocument created >> -- -- documentObject created
.. .. $-- existingDocument created ?
.. .. .. $-- -- -- Date now ! >> -- -- documentObject created
.. .. $-- existingDocument created ~ ?
.. $existingDocument ?
.. $-- Date now ! >> documentObject updated
.. $documentObject @ -- Documents put ! >> saveResult
.. 'Saved document' , $saveResult @ -- console log !
<< id value >> saveDocument

# function to rename a document
.. '$dir $oldName' >> oldId
.. $oldId @ -- Documents get ! >> documentObject
.. '$dir $newName' >> documentObject id
.. $newName >> documentObject name
.. $oldId , $documentObject @ -- Documents replace ! >> saveResult
.. 'Renamed document' , $saveResult @ -- console log !
<< dir oldName newName >> renameDocument

# test create document
# '/' , 'test document' @ saveDocument !
# '/foo' , 'test document 2' @ saveDocument !
# '/foo/bar' , 'test document 3' @ saveDocument !
# '/foo/bar/bat' , 'test document 3' @ saveDocument !
# '/foo/bar/bat/baz' , 'test document 3' @ saveDocument !

# function to open a document
.. $dir , $-- currentPathButtons , $-- Documents , $-- saveDocument , $-- renameDocument , \
   $-- components @ -- components documentToolbar !
.. $dir , $-- documentArea , $-- Documents , $-- saveDocument , $-- renameDocument , \
   $-- components @ -- components documentView !
<< dir >> openDocument

# open document on hash navigation event
.. 1 @ -- location hash substring ! @ -- openDocument !
<< >> route
hashchange , $route @ addEventListener !
$route !

# cross-browser styles
$navigator appCodeName toLowerCase ! >> appCodeName
'navigator-$appCodeName' @ document body classList add !

# handle cross-frame messages
.. 'Incoming message' , $message @ -- console log !
.. $-- Object ! >> response
.. $message data requestId >> response requestId
.. .. 1 @ -- -- location hash substring ! >> basePath
.. .. '$basePath $--\ message\ data\ data\ path' @ -- -- Documents getByDir ! >> -- reply
.. $message data type = readDir ?
.. .. 1 @ -- -- location hash substring ! >> basePath
.. .. '$basePath $--\ message\ data\ data\ path' @ -- -- Documents getNamesByDir ! >> -- reply
.. $message data type = readDirNames ?
.. $reply >> response data
.. $response @ message source postMessage !
<< message >> handleMessage
message , $handleMessage @ addEventListener !
