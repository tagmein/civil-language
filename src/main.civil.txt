# addStyle helper
.. style @ -- document createElement ! >> styleTag
.. $styleTag @ -- document head appendChild !
.. $styles >> styleTag textContent
<< styles >> addStyle

# load global styles
./src/globalStyle.civil.txt @ load !

# load all components
$Object ! >> components
.. './src/components/$name .civil.txt' @ -- load !
.. >> -- components $name
<< name : button database debounce dialog \
 documentCreateDialog documentManageDialog \
 documentToolbar documentView documentsList documentsStore \
 editor editorSimple input menu spacer toolbar !
Components , $components @ console log !

# create main toolbar
$components toolbar ! >> mainToolbar
div @ document createElement ! >> currentPathButtons
current-path @ currentPathButtons classList add ! 
$currentPathButtons @ mainToolbar container appendChild !
$components spacer ! @ mainToolbar container appendChild !
button @ document createElement ! >> fullScreenButton
â›¶ >> fullScreenButton textContent
.. $-- document fullscreen >> isFullScreen
.. .. $-- -- document exitFullscreen !
.. $isFullScreen ?
.. .. $-- -- document body requestFullscreen !
.. $isFullScreen ~ ?
<< >> toggleFullScreen
click , $toggleFullScreen @ fullScreenButton addEventListener !
$fullScreenButton @ mainToolbar container appendChild !
$mainToolbar container @ document body appendChild !

# create document area
div @ document createElement ! >> documentArea
document-area @ documentArea classList add !
$documentArea @ document body appendChild !

# connect to documents store
Civil @ components database ! >> civilDatabase
civilDatabase , $civilDatabase @ console log !
$civilDatabase @ components documentsStore ! >> Documents
Documents , $Documents @ console log !

# function to save a document
.. $-- Object ! >> documentObject
.. '$dir $name' >> documentObject id
.. $name >> documentObject name
.. $dir >> documentObject dir
.. $value >> documentObject value
.. $documentObject @ -- Documents put ! >> saveResult
.. 'Saved document' , $saveResult @ -- console log !
<< dir name value >> saveDocument

# function to rename a document
.. '$dir $oldName' >> oldId
.. $oldId @ -- Documents get ! >> documentObject
.. '$dir $newName' >> documentObject id
.. $newName >> documentObject name
.. $oldId , $documentObject @ -- Documents replace ! >> saveResult
.. 'Renamed document' , $saveResult @ -- console log !
<< dir oldName newName >> renameDocument

# test create document
# '/' , '' , 'test document' @ saveDocument !
# '/' , 'foo' , 'test document 2' @ saveDocument !
# '/foo/' , 'bar' , 'test document 3' @ saveDocument !
# '/foo/bar/' , 'bat' , 'test document 3' @ saveDocument !
# '/foo/bar/bat/' , 'baz' , 'test document 3' @ saveDocument !

# function to open a document
.. $dir , $-- currentPathButtons , $-- Documents , $-- saveDocument , $-- renameDocument , \
   $-- components @ -- components documentToolbar !
.. $dir , $-- documentArea , $-- Documents , $-- saveDocument , $-- renameDocument , \
   $-- components @ -- components documentView !
<< dir >> openDocument

# open document on hash navigation event
.. 1 @ -- location hash substring ! @ -- openDocument !
<< >> route
hashchange , $route @ addEventListener !
$route !

